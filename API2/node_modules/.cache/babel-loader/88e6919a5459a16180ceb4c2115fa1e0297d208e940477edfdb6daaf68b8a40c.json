{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kisha\\\\Desktop\\\\HACKATHON\\\\DAU-HACKATHON\\\\API2\\\\src\\\\components\\\\LocationButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport geolocationService from '../services/geolocationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationButton = ({\n  onLocationUpdate,\n  onNearestStations\n}) => {\n  _s();\n  const [locationStatus, setLocationStatus] = useState('idle'); // idle, loading, success, error\n  const [locationInfo, setLocationInfo] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if location is already available\n    const cachedLocation = geolocationService.getCachedLocation();\n    if (cachedLocation) {\n      setLocationStatus('success');\n      updateLocationInfo(cachedLocation);\n    }\n  }, []);\n  const updateLocationInfo = async location => {\n    try {\n      const reverseGeocode = await geolocationService.getReverseGeocode();\n      const info = {\n        ...location,\n        ...reverseGeocode\n      };\n      setLocationInfo(info);\n      onLocationUpdate && onLocationUpdate(location);\n    } catch (error) {\n      console.warn('Could not get location info:', error);\n      setLocationInfo({\n        ...location,\n        city: 'Unknown',\n        country: 'Unknown'\n      });\n      onLocationUpdate && onLocationUpdate(location);\n    }\n  };\n  const handleGetLocation = async () => {\n    if (!geolocationService.isSupported()) {\n      setError('Geolocation is not supported by your browser');\n      setLocationStatus('error');\n      return;\n    }\n    setLocationStatus('loading');\n    setError(null);\n    try {\n      const location = await geolocationService.getCurrentPosition();\n      setLocationStatus('success');\n      await updateLocationInfo(location);\n    } catch (err) {\n      setError(err.message);\n      setLocationStatus('error');\n    }\n  };\n  const handleFindNearestStations = stations => {\n    if (!geolocationService.getCachedLocation()) {\n      handleGetLocation().then(() => {\n        const nearestStations = geolocationService.findNearestStations(stations, 5);\n        onNearestStations && onNearestStations(nearestStations);\n      });\n    } else {\n      const nearestStations = geolocationService.findNearestStations(stations, 5);\n      onNearestStations && onNearestStations(nearestStations);\n    }\n  };\n  const getStatusIcon = () => {\n    switch (locationStatus) {\n      case 'loading':\n        return '🔄';\n      case 'success':\n        return '📍';\n      case 'error':\n        return '❌';\n      default:\n        return '🌍';\n    }\n  };\n  const getButtonText = () => {\n    switch (locationStatus) {\n      case 'loading':\n        return 'Getting Location...';\n      case 'success':\n        return 'Location Found';\n      case 'error':\n        return 'Try Again';\n      default:\n        return 'Get My Location';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location-button-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetLocation,\n      disabled: locationStatus === 'loading',\n      className: `location-button ${locationStatus}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"location-icon\",\n        children: getStatusIcon()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"location-text\",\n        children: getButtonText()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), locationStatus === 'success' && locationInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"location-city\",\n          children: [\"\\uD83D\\uDCCD \", locationInfo.city, \", \", locationInfo.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"location-coords\",\n          children: [locationInfo.lat.toFixed(4), \"\\xB0, \", locationInfo.lon.toFixed(4), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-accuracy\",\n        children: [\"Accuracy: \\xB1\", Math.round(locationInfo.accuracy), \"m\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), locationStatus === 'error' && error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-icon\",\n        children: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/React.cloneElement(/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 27\n    }, this), {\n      ref: ref => {\n        if (ref) {\n          ref.findNearestStations = handleFindNearestStations;\n        }\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationButton, \"I96KDFmWOqbs8Mtu8m2zXAu0BzI=\");\n_c = LocationButton;\nexport default LocationButton;\nvar _c;\n$RefreshReg$(_c, \"LocationButton\");","map":{"version":3,"names":["React","useState","useEffect","geolocationService","jsxDEV","_jsxDEV","LocationButton","onLocationUpdate","onNearestStations","_s","locationStatus","setLocationStatus","locationInfo","setLocationInfo","error","setError","cachedLocation","getCachedLocation","updateLocationInfo","location","reverseGeocode","getReverseGeocode","info","console","warn","city","country","handleGetLocation","isSupported","getCurrentPosition","err","message","handleFindNearestStations","stations","then","nearestStations","findNearestStations","getStatusIcon","getButtonText","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","lat","toFixed","lon","Math","round","accuracy","cloneElement","ref","_c","$RefreshReg$"],"sources":["C:/Users/Kisha/Desktop/HACKATHON/DAU-HACKATHON/API2/src/components/LocationButton.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport geolocationService from '../services/geolocationService';\n\nconst LocationButton = ({ onLocationUpdate, onNearestStations }) => {\n  const [locationStatus, setLocationStatus] = useState('idle'); // idle, loading, success, error\n  const [locationInfo, setLocationInfo] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Check if location is already available\n    const cachedLocation = geolocationService.getCachedLocation();\n    if (cachedLocation) {\n      setLocationStatus('success');\n      updateLocationInfo(cachedLocation);\n    }\n  }, []);\n\n  const updateLocationInfo = async (location) => {\n    try {\n      const reverseGeocode = await geolocationService.getReverseGeocode();\n      const info = {\n        ...location,\n        ...reverseGeocode\n      };\n      setLocationInfo(info);\n      onLocationUpdate && onLocationUpdate(location);\n    } catch (error) {\n      console.warn('Could not get location info:', error);\n      setLocationInfo({\n        ...location,\n        city: 'Unknown',\n        country: 'Unknown'\n      });\n      onLocationUpdate && onLocationUpdate(location);\n    }\n  };\n\n  const handleGetLocation = async () => {\n    if (!geolocationService.isSupported()) {\n      setError('Geolocation is not supported by your browser');\n      setLocationStatus('error');\n      return;\n    }\n\n    setLocationStatus('loading');\n    setError(null);\n\n    try {\n      const location = await geolocationService.getCurrentPosition();\n      setLocationStatus('success');\n      await updateLocationInfo(location);\n    } catch (err) {\n      setError(err.message);\n      setLocationStatus('error');\n    }\n  };\n\n  const handleFindNearestStations = (stations) => {\n    if (!geolocationService.getCachedLocation()) {\n      handleGetLocation().then(() => {\n        const nearestStations = geolocationService.findNearestStations(stations, 5);\n        onNearestStations && onNearestStations(nearestStations);\n      });\n    } else {\n      const nearestStations = geolocationService.findNearestStations(stations, 5);\n      onNearestStations && onNearestStations(nearestStations);\n    }\n  };\n\n  const getStatusIcon = () => {\n    switch (locationStatus) {\n      case 'loading':\n        return '🔄';\n      case 'success':\n        return '📍';\n      case 'error':\n        return '❌';\n      default:\n        return '🌍';\n    }\n  };\n\n  const getButtonText = () => {\n    switch (locationStatus) {\n      case 'loading':\n        return 'Getting Location...';\n      case 'success':\n        return 'Location Found';\n      case 'error':\n        return 'Try Again';\n      default:\n        return 'Get My Location';\n    }\n  };\n\n  return (\n    <div className=\"location-button-container\">\n      <button\n        onClick={handleGetLocation}\n        disabled={locationStatus === 'loading'}\n        className={`location-button ${locationStatus}`}\n      >\n        <span className=\"location-icon\">{getStatusIcon()}</span>\n        <span className=\"location-text\">{getButtonText()}</span>\n      </button>\n\n      {locationStatus === 'success' && locationInfo && (\n        <div className=\"location-info\">\n          <div className=\"location-details\">\n            <span className=\"location-city\">\n              📍 {locationInfo.city}, {locationInfo.country}\n            </span>\n            <span className=\"location-coords\">\n              {locationInfo.lat.toFixed(4)}°, {locationInfo.lon.toFixed(4)}°\n            </span>\n          </div>\n          <div className=\"location-accuracy\">\n            Accuracy: ±{Math.round(locationInfo.accuracy)}m\n          </div>\n        </div>\n      )}\n\n      {locationStatus === 'error' && error && (\n        <div className=\"location-error\">\n          <span className=\"error-icon\">⚠️</span>\n          <span className=\"error-message\">{error}</span>\n        </div>\n      )}\n\n      {/* Expose function to parent components */}\n      {React.cloneElement(<div />, {\n        ref: (ref) => {\n          if (ref) {\n            ref.findNearestStations = handleFindNearestStations;\n          }\n        }\n      })}\n    </div>\n  );\n};\n\nexport default LocationButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}