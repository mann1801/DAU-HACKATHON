{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kisha\\\\Desktop\\\\HACKATHON\\\\DAU-HACKATHON\\\\API2\\\\src\\\\components\\\\StationMonitor.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StationMonitor = ({\n  stations,\n  storms\n}) => {\n  // Calculate station threat levels based on nearby storms\n  const calculateStationThreat = (stationId, station) => {\n    let maxThreat = 'active';\n    let nearestStorm = null;\n    let minDistance = Infinity;\n    storms.forEach(storm => {\n      if (storm.nearest_station.station_id === stationId) {\n        const distance = storm.nearest_station.distance_km;\n        if (distance < minDistance) {\n          minDistance = distance;\n          nearestStorm = storm;\n        }\n\n        // Determine threat level based on storm category and distance\n        if (storm.category.includes('Category') && distance < 100) {\n          maxThreat = 'danger';\n        } else if (storm.category.includes('Tropical Storm') && distance < 50) {\n          maxThreat = 'warning';\n        } else if (distance < 200) {\n          maxThreat = 'warning';\n        }\n      }\n    });\n    return {\n      threat: maxThreat,\n      nearestStorm,\n      distance: minDistance\n    };\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'danger':\n        return '游댮';\n      case 'warning':\n        return '游리';\n      default:\n        return '游릭';\n    }\n  };\n  const getStatusText = status => {\n    switch (status) {\n      case 'danger':\n        return 'High Risk';\n      case 'warning':\n        return 'Moderate Risk';\n      default:\n        return 'Normal';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stations-grid\",\n    children: Object.entries(stations).map(([stationId, station]) => {\n      const threatInfo = calculateStationThreat(stationId, station);\n      const finalStatus = station.status || threatInfo.threat;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"station-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"station-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"station-name\",\n            children: station.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"station-id\",\n            children: [\"(\", stationId, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"station-coords\",\n          children: [station.lat.toFixed(2), \"\\xB0N, \", Math.abs(station.lon).toFixed(2), \"\\xB0W\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"station-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-indicator ${finalStatus}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-text\",\n            children: [getStatusIcon(finalStatus), \" \", getStatusText(finalStatus)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), threatInfo.nearestStorm && threatInfo.distance < 500 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"threat-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"threat-title\",\n            children: \"\\u26A0\\uFE0F Nearby Storm:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"threat-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"storm-name-small\",\n              children: threatInfo.nearestStorm.storm_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"storm-distance\",\n              children: [threatInfo.distance.toFixed(1), \" km away\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"storm-category-small\",\n              children: threatInfo.nearestStorm.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"station-metrics\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"metric-label\",\n              children: \"Last Contact:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"metric-value\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"metric-label\",\n              children: \"Data Quality:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"metric-value\",\n              children: \"Good\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, stationId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c = StationMonitor;\nexport default StationMonitor;\nvar _c;\n$RefreshReg$(_c, \"StationMonitor\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StationMonitor","stations","storms","calculateStationThreat","stationId","station","maxThreat","nearestStorm","minDistance","Infinity","forEach","storm","nearest_station","station_id","distance","distance_km","category","includes","threat","getStatusIcon","status","getStatusText","className","children","Object","entries","map","threatInfo","finalStatus","name","fileName","_jsxFileName","lineNumber","columnNumber","lat","toFixed","Math","abs","lon","storm_name","_c","$RefreshReg$"],"sources":["C:/Users/Kisha/Desktop/HACKATHON/DAU-HACKATHON/API2/src/components/StationMonitor.jsx"],"sourcesContent":["import React from 'react';\n\nconst StationMonitor = ({ stations, storms }) => {\n  // Calculate station threat levels based on nearby storms\n  const calculateStationThreat = (stationId, station) => {\n    let maxThreat = 'active';\n    let nearestStorm = null;\n    let minDistance = Infinity;\n\n    storms.forEach(storm => {\n      if (storm.nearest_station.station_id === stationId) {\n        const distance = storm.nearest_station.distance_km;\n        if (distance < minDistance) {\n          minDistance = distance;\n          nearestStorm = storm;\n        }\n\n        // Determine threat level based on storm category and distance\n        if (storm.category.includes('Category') && distance < 100) {\n          maxThreat = 'danger';\n        } else if (storm.category.includes('Tropical Storm') && distance < 50) {\n          maxThreat = 'warning';\n        } else if (distance < 200) {\n          maxThreat = 'warning';\n        }\n      }\n    });\n\n    return { threat: maxThreat, nearestStorm, distance: minDistance };\n  };\n\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'danger': return '游댮';\n      case 'warning': return '游리';\n      default: return '游릭';\n    }\n  };\n\n  const getStatusText = (status) => {\n    switch (status) {\n      case 'danger': return 'High Risk';\n      case 'warning': return 'Moderate Risk';\n      default: return 'Normal';\n    }\n  };\n\n  return (\n    <div className=\"stations-grid\">\n      {Object.entries(stations).map(([stationId, station]) => {\n        const threatInfo = calculateStationThreat(stationId, station);\n        const finalStatus = station.status || threatInfo.threat;\n\n        return (\n          <div key={stationId} className=\"station-card\">\n            <div className=\"station-header\">\n              <div className=\"station-name\">{station.name}</div>\n              <div className=\"station-id\">({stationId})</div>\n            </div>\n            \n            <div className=\"station-coords\">\n              {station.lat.toFixed(2)}춿N, {Math.abs(station.lon).toFixed(2)}춿W\n            </div>\n            \n            <div className=\"station-status\">\n              <div className={`status-indicator ${finalStatus}`}></div>\n              <span className=\"status-text\">\n                {getStatusIcon(finalStatus)} {getStatusText(finalStatus)}\n              </span>\n            </div>\n\n            {threatInfo.nearestStorm && threatInfo.distance < 500 && (\n              <div className=\"threat-info\">\n                <div className=\"threat-title\">丘멆잺 Nearby Storm:</div>\n                <div className=\"threat-details\">\n                  <div className=\"storm-name-small\">\n                    {threatInfo.nearestStorm.storm_name}\n                  </div>\n                  <div className=\"storm-distance\">\n                    {threatInfo.distance.toFixed(1)} km away\n                  </div>\n                  <div className=\"storm-category-small\">\n                    {threatInfo.nearestStorm.category}\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"station-metrics\">\n              <div className=\"metric\">\n                <span className=\"metric-label\">Last Contact:</span>\n                <span className=\"metric-value\">Active</span>\n              </div>\n              <div className=\"metric\">\n                <span className=\"metric-label\">Data Quality:</span>\n                <span className=\"metric-value\">Good</span>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default StationMonitor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}